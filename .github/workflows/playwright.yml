name: Playwright + Allure CI

on:
  push:
    branches: [ EL-27-Playwright ]
  pull_request:
    branches: [ EL-27-Playwright ]

jobs:
  # 1. Run Playwright tests in 20 Docker shards
  playwright:
    name: Playwright Shard ${{ matrix.shardIndex }} of ${{ matrix.shardTotal }}
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.53.0-noble
      options: --user 1001
    strategy:
      matrix:
        shardIndex: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
        shardTotal: [20]
    steps:

      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run Playwright tests (sharded, Allure, screenshots, videos)
        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} --reporter=allure-playwright,line

      - name: 📤 Upload Allure results for this shard
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-shard-${{ matrix.shardIndex }}
          path: allure-results/
          retention-days: 7

  # 2. Merge Allure results and build HTML report
  build-allure:
    name: 🛠️ Merge Allure Results & Build Report
    needs: playwright
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.53.0-noble
      options: --user 1001
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: ⬇️ Download Allure results from all shards
        uses: actions/download-artifact@v4
        with:
          path: merged-allure-results

      - name: 📦 Install dependencies
        run: npm ci

      - name: ☕ Set up Java for Allure CLI
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 🗃️ Merge Allure results from all shards
        run: |
          mkdir -p allure-results
          # Copy everything (JSON, PNG, WEBM, etc.) from all subfolders
          cp -r merged-allure-results/*/ allure-results/

      - name: 🕵️ List merged allure-results
        run: find allure-results

      - name: 🏗️ Generate Allure HTML report (with screenshots/videos)
        run: npx allure generate allure-results --clean -o public

      - name: 📂 List final public directory
        run: find ./public

      - name: 📤 Upload Allure HTML report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: public/
          retention-days: 30

  # 3. Deploy to GitHub Pages (modern way)
  deploy-pages:
    name: 🚀 Deploy Allure Report to GitHub Pages
    needs: build-allure
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: ⬇️ Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: public

      - name: 📂 List final public directory
        run: find ./public

      - name: ⚙️ Setup Pages
        uses: actions/configure-pages@v5

      - name: 📤 Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: 📝 Post summary with report link
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const url = `https://paul1404.github.io/elecalculate/`;
            core.summary
              .addHeading('Test Report')
              .addLink('View Allure HTML Report (with screenshots/videos)', url)
              .write();